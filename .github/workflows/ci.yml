name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-test:
    strategy:
      fail-fast: false
      matrix:
        node: [20.x, 22.x]
    runs-on: ubuntu-latest
    env:
      HUSKY: 0 # disable husky in CI
      CI: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.13.1

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Lint
        run: pnpm lint

      - name: Typecheck
        run: pnpm typecheck

      - name: Unit & Integration Tests
        run: pnpm test

      - name: Electron Smoke (desktop didFinishLoad)
        if: >-
          contains(github.event.pull_request.head.ref, 'desktop') ||
          contains(github.event.pull_request.title || '', '[desktop]') ||
          contains(toJson(github.event.pull_request.changed_files || ''), 'apps/desktop/') ||
          github.ref == 'refs/heads/main'
        run: |
          echo "::group::Electron smoke build"
          pnpm --filter @budget/web build
          pnpm --filter @budget/desktop build
          echo "::endgroup::"
          # Run electron for a short window and capture structured events
          node -e "const {spawn}=require('child_process');const p=spawn('npx',['electron','apps/desktop/dist/main.js'],{stdio:['ignore','pipe','pipe'],env:{...process.env,NODE_ENV:'production'}});let gotLoad=false,gotShow=false; p.stdout.on('data',d=>{const s=d.toString().trim(); if(s.includes('desktop.didFinishLoad')){ gotLoad=true; echoEvent('didFinishLoad',s);} if(s.includes('desktop.readyToShow')){ gotShow=true; echoEvent('readyToShow',s);} function echoEvent(ev,msg){console.log('SMOKE_EVENT:'+ev+' '+msg);} }); setTimeout(()=>{ if(!gotLoad){console.error('Smoke fail: didFinishLoad not observed'); process.exit(1);} if(!gotShow){console.error('Smoke warn: readyToShow not observed (may be headless)'); } p.kill('SIGTERM'); },8000);" > electron-smoke.log 2>&1 || echo "Smoke script exited"
          grep -q 'desktop.didFinishLoad' electron-smoke.log || (echo 'Missing desktop.didFinishLoad marker' && cat electron-smoke.log && exit 1)
          echo 'Electron smoke passed'

      - name: Upload test artifacts (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: logs-${{ matrix.node }}
          path: |
            **/vitest-report*.json
            **/junit*.xml
            lint*.out
            *.log
            electron-smoke.log
